{"version":3,"file":"js/646.925c7931.js","mappings":"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","sources":["webpack://vue_login/./src/components/goods/Params.vue","webpack://vue_login/src/components/goods/Params.vue","webpack://vue_login/./src/components/goods/Params.vue?9d53","webpack://vue_login/./src/components/goods/Params.vue?9d3d"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"商品管理\")]),_c('el-breadcrumb-item',[_vm._v(\"参数列表\")])],1),_c('el-card',[_c('el-alert',{attrs:{\"title\":\"注意：只允许为第三级分类设置相关参数！\",\"type\":\"warning\",\"show-icon\":\"\",\"closable\":false}}),_c('el-row',{staticClass:\"cat_opt\"},[_c('el-col',[_c('span',[_vm._v(\"选择商品分类：\")]),_c('el-cascader',{attrs:{\"options\":_vm.cateList,\"props\":_vm.cateProps},on:{\"change\":_vm.handleChange},model:{value:(_vm.selectedCateKeys),callback:function ($$v) {_vm.selectedCateKeys=$$v},expression:\"selectedCateKeys\"}})],1)],1),_c('el-tabs',{on:{\"tab-click\":_vm.handleTabsClick},model:{value:(_vm.activeTabsName),callback:function ($$v) {_vm.activeTabsName=$$v},expression:\"activeTabsName\"}},[_c('el-tab-pane',{attrs:{\"label\":\"动态参数\",\"name\":\"many\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"disabled\":_vm.isBtnDisabled},on:{\"click\":function($event){_vm.addDialogVisible = true}}},[_vm._v(\"添加参数\")]),_c('el-table',{attrs:{\"data\":_vm.manyTableData,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._l((scope.row.attr_vals),function(item,i){return _c('el-tag',{key:i,attrs:{\"closable\":\"\"},on:{\"close\":function($event){return _vm.handleClose(i, scope.row)}}},[_vm._v(_vm._s(item))])}),(scope.row.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":function($event){return _vm.handleInputConfirm(scope.row)}},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.handleInputConfirm(scope.row)}},model:{value:(scope.row.inputValue),callback:function ($$v) {_vm.$set(scope.row, \"inputValue\", $$v)},expression:\"scope.row.inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.showInput(scope.row)}}},[_vm._v(\"+ New Tag\")])]}}])}),_c('el-table-column',{attrs:{\"type\":\"index\"}}),_c('el-table-column',{attrs:{\"label\":\"参数名称\",\"prop\":\"attr_name\"}}),_c('el-table-column',{scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-edit\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.showEditDialog(scope.row.attr_id)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.removeParams(scope.row.attr_id)}}},[_vm._v(\"删除\")])]}}])})],1)],1),_c('el-tab-pane',{attrs:{\"label\":\"静态属性\",\"name\":\"only\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"disabled\":_vm.isBtnDisabled},on:{\"click\":function($event){_vm.addDialogVisible = true}}},[_vm._v(\"添加属性\")]),_c('el-table',{attrs:{\"data\":_vm.onlyTableData,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._l((scope.row.attr_vals),function(item,i){return _c('el-tag',{key:i,attrs:{\"closable\":\"\"},on:{\"close\":function($event){return _vm.handleClose(i, scope.row)}}},[_vm._v(_vm._s(item))])}),(scope.row.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":function($event){return _vm.handleInputConfirm(scope.row)}},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.handleInputConfirm(scope.row)}},model:{value:(scope.row.inputValue),callback:function ($$v) {_vm.$set(scope.row, \"inputValue\", $$v)},expression:\"scope.row.inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.showInput(scope.row)}}},[_vm._v(\"+ New Tag\")])]}}])}),_c('el-table-column',{attrs:{\"type\":\"index\"}}),_c('el-table-column',{attrs:{\"label\":\"属性名称\",\"prop\":\"attr_name\"}}),_c('el-table-column',{scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-edit\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.showEditDialog(scope.row.attr_id)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.removeParams(scope.row.attr_id)}}},[_vm._v(\"删除\")])]}}])})],1)],1)],1)],1),_c('el-dialog',{attrs:{\"title\":'添加' + _vm.getTitleText,\"visible\":_vm.addDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.addDialogVisible=$event},\"close\":_vm.addDialogClosed}},[_c('el-form',{ref:\"addFromRef\",attrs:{\"model\":_vm.addFrom,\"rules\":_vm.addFromRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.getTitleText,\"prop\":\"attr_name\"}},[_c('el-input',{model:{value:(_vm.addFrom.attr_name),callback:function ($$v) {_vm.$set(_vm.addFrom, \"attr_name\", $$v)},expression:\"addFrom.attr_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addParams}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":'修改' + _vm.getTitleText,\"visible\":_vm.editDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.editDialogVisible=$event},\"close\":_vm.editDialogClosed}},[_c('el-form',{ref:\"editFromRef\",attrs:{\"model\":_vm.editFrom,\"rules\":_vm.editFromRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.getTitleText,\"prop\":\"attr_name\"}},[_c('el-input',{model:{value:(_vm.editFrom.attr_name),callback:function ($$v) {_vm.$set(_vm.editFrom, \"attr_name\", $$v)},expression:\"editFrom.attr_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.editDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.editParams}},[_vm._v(\"确 定\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <!-- 面包屑导航区 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\n      <el-breadcrumb-item>参数列表</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- 卡片视图 -->\n    <el-card>\n      <!-- 警告区域 -->\n      <el-alert title=\"注意：只允许为第三级分类设置相关参数！\" type=\"warning\" show-icon :closable=\"false\"></el-alert>\n\n      <!-- 选择商品分类区域 -->\n      <el-row class=\"cat_opt\">\n        <el-col>\n          <span>选择商品分类：</span>\n          <!-- 商品分类的级联选择框 -->\n          <el-cascader\n            v-model=\"selectedCateKeys\"\n            :options=\"cateList\"\n            :props=\"cateProps\"\n            @change=\"handleChange\"\n          ></el-cascader>\n        </el-col>\n      </el-row>\n\n      <!-- tab页签区域 -->\n      <el-tabs v-model=\"activeTabsName\" @tab-click=\"handleTabsClick\">\n        <!-- 添加动态参数面板 -->\n        <el-tab-pane label=\"动态参数\" name=\"many\">\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            :disabled=\"isBtnDisabled\"\n            @click=\"addDialogVisible = true\"\n          >添加参数</el-button>\n          <!-- 动态参数表格 -->\n          <el-table :data=\"manyTableData\" border stripe>\n            <!-- 展开列 -->\n            <el-table-column type=\"expand\">\n              <template slot-scope=\"scope\">\n                <el-tag\n                  v-for=\"(item, i) in scope.row.attr_vals\"\n                  :key=\"i\"\n                  closable\n                  @close=\"handleClose(i, scope.row)\"\n                >{{item}}</el-tag>\n                <!-- 输入Tag文本框 -->\n                <el-input\n                  class=\"input-new-tag\"\n                  v-if=\"scope.row.inputVisible\"\n                  v-model=\"scope.row.inputValue\"\n                  ref=\"saveTagInput\"\n                  size=\"small\"\n                  @keyup.enter.native=\"handleInputConfirm(scope.row)\"\n                  @blur=\"handleInputConfirm(scope.row)\"\n                ></el-input>\n                <el-button\n                  v-else\n                  class=\"button-new-tag\"\n                  size=\"small\"\n                  @click=\"showInput(scope.row)\"\n                >+ New Tag</el-button>\n              </template>\n            </el-table-column>\n            <!-- 索引列 -->\n            <el-table-column type=\"index\"></el-table-column>\n            <el-table-column label=\"参数名称\" prop=\"attr_name\"></el-table-column>\n            <el-table-column>\n              <template slot-scope=\"scope\">\n                <el-button\n                  type=\"primary\"\n                  icon=\"el-icon-edit\"\n                  size=\"mini\"\n                  @click=\"showEditDialog(scope.row.attr_id)\"\n                >编辑</el-button>\n                <el-button\n                  type=\"danger\"\n                  icon=\"el-icon-delete\"\n                  size=\"mini\"\n                  @click=\"removeParams(scope.row.attr_id)\"\n                >删除</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-tab-pane>\n        <!-- 添加静态属性面板 -->\n        <el-tab-pane label=\"静态属性\" name=\"only\">\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            :disabled=\"isBtnDisabled\"\n            @click=\"addDialogVisible = true\"\n          >添加属性</el-button>\n          <!-- 静态属性表格 -->\n          <el-table :data=\"onlyTableData\" border stripe>\n            <!-- 展开列 -->\n            <!-- 展开列 -->\n            <el-table-column type=\"expand\">\n              <template slot-scope=\"scope\">\n                <el-tag\n                  v-for=\"(item, i) in scope.row.attr_vals\"\n                  :key=\"i\"\n                  closable\n                  @close=\"handleClose(i, scope.row)\"\n                >{{item}}</el-tag>\n                <!-- 输入Tag文本框 -->\n                <el-input\n                  class=\"input-new-tag\"\n                  v-if=\"scope.row.inputVisible\"\n                  v-model=\"scope.row.inputValue\"\n                  ref=\"saveTagInput\"\n                  size=\"small\"\n                  @keyup.enter.native=\"handleInputConfirm(scope.row)\"\n                  @blur=\"handleInputConfirm(scope.row)\"\n                ></el-input>\n                <el-button\n                  v-else\n                  class=\"button-new-tag\"\n                  size=\"small\"\n                  @click=\"showInput(scope.row)\"\n                >+ New Tag</el-button>\n              </template>\n            </el-table-column>\n            <!-- 索引列 -->\n            <el-table-column type=\"index\"></el-table-column>\n            <el-table-column label=\"属性名称\" prop=\"attr_name\"></el-table-column>\n            <el-table-column>\n              <template slot-scope=\"scope\">\n                <el-button\n                  type=\"primary\"\n                  icon=\"el-icon-edit\"\n                  size=\"mini\"\n                  @click=\"showEditDialog(scope.row.attr_id)\"\n                >编辑</el-button>\n                <el-button\n                  type=\"danger\"\n                  icon=\"el-icon-delete\"\n                  size=\"mini\"\n                  @click=\"removeParams(scope.row.attr_id)\"\n                >删除</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-tab-pane>\n      </el-tabs>\n    </el-card>\n    <!-- 添加参数对话框 -->\n    <el-dialog\n      :title=\" '添加' + getTitleText\"\n      :visible.sync=\"addDialogVisible\"\n      width=\"50%\"\n      @close=\"addDialogClosed\"\n    >\n      <el-form :model=\"addFrom\" :rules=\"addFromRules\" ref=\"addFromRef\" label-width=\"100px\">\n        <el-form-item :label=\"getTitleText\" prop=\"attr_name\">\n          <el-input v-model=\"addFrom.attr_name\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addParams\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 编辑参数对话框 -->\n    <el-dialog\n      :title=\" '修改' + getTitleText\"\n      :visible.sync=\"editDialogVisible\"\n      width=\"50%\"\n      @close=\"editDialogClosed\"\n    >\n      <el-form :model=\"editFrom\" :rules=\"editFromRules\" ref=\"editFromRef\" label-width=\"100px\">\n        <el-form-item :label=\"getTitleText\" prop=\"attr_name\">\n          <el-input v-model=\"editFrom.attr_name\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"editParams\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      // 商品分类列表\n      cateList: [],\n      //   级联选择框的配置对象\n      cateProps: {\n        expandTrigger: 'hover',\n        value: 'cat_id',\n        label: 'cat_name',\n        children: 'children'\n      },\n      //   级联选择框双向绑定对象\n      selectedCateKeys: [],\n      //   激活页签名称\n      activeTabsName: 'many',\n      //   动态参数数据\n      manyTableData: [],\n      //   静态属性数据\n      onlyTableData: [],\n      //   控制添加参数对话框的显示与隐藏\n      addDialogVisible: false,\n      //   添加表单的数据对象\n      addFrom: {\n        attr_name: ''\n      },\n      //   添加表单的验证规则\n      addFromRules: {\n        attr_name: [\n          { required: true, message: '请输入参数名称', trigger: 'blur' }\n        ]\n      },\n      //   编辑对话框\n      editDialogVisible: false,\n      //   修改表单数据对象\n      editFrom: {},\n      //   修改表单验证规则\n      editFromRules: {\n        attr_name: [\n          { required: true, message: '请输入参数名称', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created () {\n    this.getCateList()\n  },\n  computed: {\n    //   按钮需要被禁用返回true, 否则返回false\n    isBtnDisabled () {\n      if (this.selectedCateKeys.length !== 3) {\n        return true\n      }\n      return false\n    },\n    // 当前选中的三级分类Id\n    getCateId () {\n      if (this.selectedCateKeys.length === 3) {\n        return this.selectedCateKeys[2]\n      }\n      return null\n    },\n    getTitleText () {\n      if (this.activeTabsName === 'many') {\n        return '动态参数'\n      }\n      return '静态属性'\n    }\n  },\n  methods: {\n    //   获取所有的商品分类列表\n    async getCateList () {\n      const { data: res } = await this.$http.get('categories')\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取商品数据列表失败！')\n      }\n      this.cateList = res.data\n    },\n    // 级联选择框 选中变化 触发\n    handleChange () {\n      this.getParamsData()\n    },\n    // Tab页签点击事件的处理函数\n    handleTabsClick () {\n      this.getParamsData()\n    },\n    // 获取参数的列表数据\n    async getParamsData () {\n      // 只允许选择三级分类：\n      // 通过数组的长度判断\n      if (this.selectedCateKeys.length !== 3) {\n        this.selectedCateKeys = []\n        // 清空表格数据\n        this.manyTableData = []\n        this.onlyTableData = []\n        return\n      }\n      //   根据所选分类的Id,和当前面板的参数, 获取对应的参数\n      const { data: res } = await this.$http.get(\n        `categories/${this.getCateId}/attributes`,\n        {\n          params: { sel: this.activeTabsName }\n        }\n      )\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取参数列表失败！')\n      }\n\n      res.data.forEach(item => {\n        //   通过三元表达式判断attr_vals是否为空\n        item.attr_vals = item.attr_vals ? item.attr_vals.split(' ') : []\n\n        // 控制文本框的显示与隐藏\n        item.inputVisible = false\n        // 文本框的输入值\n        item.inputValue = ''\n      })\n      if (this.activeTabsName === 'many') {\n        this.manyTableData = res.data\n      } else {\n        this.onlyTableData = res.data\n      }\n    },\n    // 监听对话框的关闭事件\n    addDialogClosed () {\n      this.$refs.addFromRef.resetFields()\n    },\n    // 添加参数\n    addParams () {\n      this.$refs.addFromRef.validate(async valid => {\n        if (!valid) return\n        const { data: res } = await this.$http.post(\n          `categories/${this.getCateId}/attributes`,\n          {\n            attr_name: this.addFrom.attr_name,\n            attr_sel: this.activeTabsName\n          }\n        )\n        if (res.meta.status !== 201) {\n          return this.$message.error('添加参数失败！')\n        }\n        this.$message.success('添加参数成功！')\n        this.addDialogVisible = false\n        this.getParamsData()\n      })\n    },\n    // 显示编辑对话框\n    async showEditDialog (attrId) {\n      const { data: res } = await this.$http.get(\n        `categories/${this.getCateId}/attributes/${attrId}`,\n        {\n          params: { attr_sel: this.activeTabsName }\n        }\n      )\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取分类失败！')\n      }\n      this.editFrom = res.data\n      this.editDialogVisible = true\n    },\n    // 重置修改表单\n    editDialogClosed () {\n      this.$refs.editFromRef.resetFields()\n    },\n    // 修改参数\n    editParams () {\n      this.$refs.editFromRef.validate(async valid => {\n        if (!valid) return\n        const { data: res } = await this.$http.put(\n          `categories/${this.getCateId}/attributes/${this.editFrom.attr_id}`,\n          {\n            attr_name: this.editFrom.attr_name,\n            attr_sel: this.activeTabsName\n          }\n        )\n        if (res.meta.status !== 200) {\n          return this.$message.error('修改参数失败！')\n        }\n        this.$message.success('修改参数成功！')\n        this.getParamsData()\n        this.editDialogVisible = false\n      })\n    },\n    // 根据Id删除对应的参数项\n    async removeParams (attrId) {\n      const confirmResult = await this.$confirm(\n        '此操作将永久删除该参数, 是否继续?',\n        '提示',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).catch(err => err)\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('已取消删除！')\n      }\n      const { data: res } = await this.$http.delete(\n        `categories/${this.getCateId}/attributes/${attrId}`\n      )\n      if (res.meta.status !== 200) {\n        return this.$message.error('删除参数失败！')\n      }\n      this.$message.success('删除参数成功！')\n      this.getParamsData()\n    },\n    // 文本框失去焦点,或者按下Enter触发\n    handleInputConfirm (row) {\n      // 输入的内容为空时，清空\n      if (row.inputValue.trim().length === 0) {\n        row.inputValue = ''\n        row.inputVisible = false\n        return\n      }\n      row.attr_vals.push(row.inputValue.trim())\n      row.inputValue = ''\n      row.inputVisible = false\n      // 提交数据库，保存修改\n      this.saveAttrVals(row)\n    },\n    // 将对attr_vals（Tag） 的操作 保存到数据库\n    async saveAttrVals (row) {\n      const { data: res } = await this.$http.put(\n        `categories/${this.getCateId}/attributes/${row.attr_id}`,\n        {\n          attr_name: row.attr_name,\n          attr_sel: row.attr_sel,\n          attr_vals: row.attr_vals.join(' ')\n        }\n      )\n      if (res.meta.status !== 200) {\n        return this.$message.error('修改参数项失败！')\n      }\n      this.$message.success('修改参数项成功！')\n    },\n    // 点击按钮显示输入框\n    showInput (row) {\n      row.inputVisible = true\n      //   让输入框自动获取焦点\n      // $nextTick方法的作用：当页面元素被重新渲染之后，才会至指定回调函数中的代码\n      this.$nextTick(_ => {\n        this.$refs.saveTagInput.$refs.input.focus()\n      })\n    },\n    // 删除对应的参数可选项\n    handleClose (i, row) {\n      row.attr_vals.splice(i, 1)\n      this.saveAttrVals(row)\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.cat_opt {\n  margin: 15px 0px;\n}\n.el-cascader {\n  width: 25%;\n}\n.el-tag {\n  margin: 8px;\n}\n.input-new-tag {\n  width: 90px;\n}\n.button-new-tag {\n  height: 32px;\n  line-height: 30px;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Params.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Params.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Params.vue?vue&type=template&id=e4ec3dda&scoped=true&\"\nimport script from \"./Params.vue?vue&type=script&lang=js&\"\nexport * from \"./Params.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Params.vue?vue&type=style&index=0&id=e4ec3dda&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e4ec3dda\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","attrs","path","_v","staticClass","cateList","cateProps","on","handleChange","model","value","selectedCateKeys","callback","$$v","expression","handleTabsClick","activeTabsName","isBtnDisabled","$event","addDialogVisible","manyTableData","scopedSlots","_u","key","fn","scope","_l","row","attr_vals","item","i","handleClose","_s","inputVisible","ref","handleInputConfirm","nativeOn","type","indexOf","_k","keyCode","inputValue","$set","showInput","showEditDialog","attr_id","removeParams","onlyTableData","getTitleText","addDialogClosed","addFrom","addFromRules","attr_name","slot","addParams","editDialogVisible","editDialogClosed","editFrom","editFromRules","editParams","staticRenderFns","data","expandTrigger","label","children","required","message","trigger","created","getCateList","computed","length","getCateId","methods","res","$http","get","meta","status","$message","error","getParamsData","params","sel","forEach","split","$refs","addFromRef","resetFields","validate","valid","post","attr_sel","success","attrId","editFromRef","put","confirmResult","$confirm","confirmButtonText","cancelButtonText","catch","err","info","delete","trim","push","saveAttrVals","join","$nextTick","_","saveTagInput","input","focus","splice","component"],"sourceRoot":""}